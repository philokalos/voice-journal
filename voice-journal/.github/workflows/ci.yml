name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        
      - name: Type check
        run: npm run type-check
        
      - name: Run unit tests
        run: npm run test:coverage
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: frontend
          name: codecov-frontend
          fail_ci_if_error: false
        
      - name: Install Functions dependencies
        run: |
          cd functions
          npm ci
          
      - name: Build Functions
        run: |
          cd functions
          npm run build
          
      - name: Run Functions tests
        run: |
          cd functions
          npm run test:coverage
          
      - name: Upload Functions coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./functions/coverage/lcov.info
          flags: functions
          name: codecov-functions
          fail_ci_if_error: false
        
      - name: Build application
        env:
          # Use dummy values for build test
          VITE_FIREBASE_API_KEY: dummy-api-key-for-build-test
          VITE_FIREBASE_AUTH_DOMAIN: dummy-project.firebaseapp.com
          VITE_FIREBASE_PROJECT_ID: dummy-project
          VITE_FIREBASE_STORAGE_BUCKET: dummy-project.appspot.com
          VITE_FIREBASE_MESSAGING_SENDER_ID: "123456789"
          VITE_FIREBASE_APP_ID: "1:123456789:web:abcdef"
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files-${{ matrix.node-version }}
          path: dist/
          retention-days: 7

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        env:
          VITE_FIREBASE_API_KEY: dummy-api-key-for-e2e-test
          VITE_FIREBASE_AUTH_DOMAIN: dummy-project.firebaseapp.com
          VITE_FIREBASE_PROJECT_ID: dummy-project
          VITE_FIREBASE_STORAGE_BUCKET: dummy-project.appspot.com
          VITE_FIREBASE_MESSAGING_SENDER_ID: "123456789"
          VITE_FIREBASE_APP_ID: "1:123456789:web:abcdef"
        run: npm run build
        
      - name: Start application
        run: |
          npm run preview &
          sleep 10
          
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://localhost:4173'
          wait-on-timeout: 120
          browser: chrome
          headless: true
          
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 30
          
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Check for vulnerable packages
        run: |
          # Check for known vulnerabilities
          npx audit-ci --moderate

  preview-deploy:
    name: Preview Deployment
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          
  production-deploy:
    name: Production Deployment
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://voice-journal.vercel.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
          
      - name: Comment deployment URL
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          script: |
            const { data: deployment } = await github.rest.repos.getLatestPagesBuild({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            console.log('ðŸš€ Deployed to production:', deployment.url);

  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: [production-deploy]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://voice-journal.vercel.app
          configPath: '.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true